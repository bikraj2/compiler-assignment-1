set int small;


func maxOfArray([int] a; int) <
  int max = a[0]; // Initialize max to the first element
  int length = size[a];
  loop (int i = 1; i < length; i = i + 1): <
    if (a[i] > max): <
      max = a[i]; // Update max if the current element is greater
    >;
  >;
  return max;
>

// Declare a map where the key is an integer and the value is an array of integers
{int: [int]} myMap;

// Initialize arrays separately
[int] array1;
array1 <- [5]; // Initialize with a single value
array1 <- [15]; // Reassign the array to a new value
array1 <- [25]; // Reassign the array to a new value
myMap[2] <- array1; // Assign to the map

[int] array2;
array2 <- [1]; // Initialize with a single value
array2 <- [2]; // Reassign the array to a new value
array2 <- [3]; // Reassign the array to a new value
array2 <- [4]; // Reassign the array to a new value
array2 <- [5]; // Reassign the array to a new value
myMap[3] <- array2; // Assign to the map

// Assign other values to the map
myMap[1] <- [10]; // Initialize directly for key 1
