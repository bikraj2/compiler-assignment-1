Useless nonterminals

   ACCES_VAL
   REF_TYPE
   CONSTANT


Terminals which are not used

   IF
   MOD_OP
   COMP_ASSIGN_ADD
   LESS_THAN
   GREAT_THAN
   COMPLEMENT
   NOT
   BIT_OR
   BIT_AND
   BIT_NOT
   RIGHT_ACCESS
   LEFT_ACCESS
   SINGLE_LINE_COMMENT


Useless rules

   73 ACCES_VAL: INTEGER
   74          | VAR

   75 REF_TYPE: LEFT_BRACE ACCES_VAL RIGHT_BRACE
   76         | LEFT_PAREN RIGHT_PAREN
   77         | /* empty */

   78 CONSTANT: DOUBLE
   79         | INTEGER


State 139 conflicts: 4 shift/reduce
State 147 conflicts: 4 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: PROGRAM STATEMENT
    2        | /* empty */

    3 STATEMENT: FUNC_STATEMENT
    4          | LOOP_STATEMENT
    5          | CONDITIONAL_STATEMENT
    6          | PRINT_STATEMENT
    7          | SET_STATEMENT
    8          | DEC_STATEMENT
    9          | EXPRESSION_STMT
   10          | ASSIGN_STATEMENT
   11          | SEMI

   12 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE
   13               | LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON FINALLY_STMT

   14 LOOP_CONDITION: DEC_STATEMENT BOOLEAN_EXP SEMI ASSIGN_STATEMENT

   15 FINALLY_STMT: FINALLY COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE

   16 IF_STATEMENT: BOOLEAN_EXP TERNARY STATEMENT

   17 ELSE_STATEMENT: ELSE COLON STATEMENT

   18 CONDITIONAL_STATEMENT: RIGHT_ANGLE IF_STATEMENT ELSE_STATEMENT LEFT_ANGLE

   19 PRINT_STATEMENT: PRINT LEFT_PAREN PRINTABLE RIGHT_PAREN SEMI

   20 FUNC_STATEMENT: FUNC VAR FUNCTION_DEC_LIST LEFT_ANGLE FUNCTION_BODY RIGHT_ANGLE

   21 FUNCTION_DEC_LIST: LEFT_PAREN PARAMETER_LIST SEMI TYPE RIGHT_PAREN

   22 PARAMETER_LIST: PARAMETER
   23               | PARAMETER_LIST COMMA PARAMETER

   24 PARAMETER: TYPE VAR

   25 FUNCTION_BODY: PROGRAM RETURN_STATEMENT

   26 RETURN_STATEMENT: RETURN EXPRESSION SEMI

   27 SET_TYPE: INT
   28         | FLOAT

   29 VEC_TYPE: LEFT_BRACE SET_TYPE RIGHT_BRACE

   30 MIX_TYPE: SET_TYPE
   31         | VEC_TYPE

   32 TYPE: SET_TYPE
   33     | VEC_TYPE
   34     | LEFT_CURLY_BRACE SET_TYPE ':' MIX_TYPE RIGHT_CURLY_BRACE

   35 SET_SIZE: BIG
   36         | SMALL

   37 SET_STATEMENT: SET SET_TYPE SET_SIZE SEMI

   38 VAR_TYPE: INTEGER
   39         | DOUBLE

   40 DEC_CONDITION: ASSIGN VAR_TYPE
   41              | /* empty */

   42 VAR_LIST: VAR_LIST COMMA VAR DEC_CONDITION
   43         | VAR DEC_CONDITION

   44 DEC_STATEMENT: TYPE VAR_LIST SEMI

   45 ASSIGN_STATEMENT: VAR ASSIGN EXPRESSION SEMI

   46 EXPRESSION_STMT: EXPRESSION SEMI

   47 EXPRESSION: BOOLEAN_EXP

   48 ARITHMETIC_EXP: ARITHMETIC_EXP ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP SUB_OP MUL_EXP
   50               | MUL_EXP

   51 MUL_EXP: MUL_EXP MULT_OP POW_EXP
   52        | MUL_EXP DIV_OP POW_EXP
   53        | POW_EXP

   54 POW_EXP: POW_EXP POW_OP PRIMARY_EXP
   55        | PRIMARY_EXP

   56 PRIMARY_EXP: LEFT_PAREN EXPRESSION RIGHT_PAREN
   57            | FACTOR

   58 BOOLEAN_EXP: BOOLEAN_EXP AND RELATIONAL_EXP
   59            | BOOLEAN_EXP OR RELATIONAL_EXP
   60            | RELATIONAL_EXP

   61 RELATIONAL_EXP: RELATIONAL_EXP LEFT_ANGLE ARITHMETIC_EXP
   62               | RELATIONAL_EXP RIGHT_ANGLE ARITHMETIC_EXP
   63               | RELATIONAL_EXP GREAT_THAN_EQ ARITHMETIC_EXP
   64               | RELATIONAL_EXP LESS_THAN_EQ ARITHMETIC_EXP
   65               | RELATIONAL_EXP EQUAL_TO ARITHMETIC_EXP
   66               | RELATIONAL_EXP NOT_EQ ARITHMETIC_EXP
   67               | ARITHMETIC_EXP

   68 FACTOR: VAR
   69       | INTEGER
   70       | DOUBLE

   71 PRINTABLE: VAR_TYPE
   72          | VAR


Terminals, with rules where they appear

$end (0) 0
':' (58) 34
error (256)
INTEGER (258) 38 69
DOUBLE (259) 39 70
INT (260) 27
FLOAT (261) 28
BIG (262) 35
SMALL (263) 36
IF (264)
ELSE (265) 17
RETURN (266) 26
ADD_OP (267) 48
SUB_OP (268) 49
DIV_OP (269) 52
MULT_OP (270) 51
POW_OP (271) 54
MOD_OP (272)
ASSIGN (273) 40 45
COMP_ASSIGN_ADD (274)
LESS_THAN (275)
LESS_THAN_EQ (276) 64
GREAT_THAN (277)
GREAT_THAN_EQ (278) 63
NOT_EQ (279) 66
COMPLEMENT (280)
EQUAL_TO (281) 65
OR (282) 59
AND (283) 58
NOT (284)
BIT_OR (285)
BIT_AND (286)
BIT_NOT (287)
VAR (288) 20 24 42 43 45 68 72
TERNARY (289) 16
COLON (290) 12 13 15 17
SEMI (291) 11 14 19 21 26 37 44 45 46
RIGHT_ACCESS (292)
LEFT_ACCESS (293)
LEFT_PAREN (294) 12 13 19 21 56
RIGHT_PAREN (295) 12 13 19 21 56
LEFT_CURLY_BRACE (296) 34
RIGHT_CURLY_BRACE (297) 34
LEFT_BRACE (298) 29
RIGHT_BRACE (299) 29
SINGLE_LINE_COMMENT (300)
RIGHT_ANGLE (301) 12 13 15 18 20 62
LEFT_ANGLE (302) 12 13 15 18 20 61
SET (303) 37
LOOP (304) 12 13
FINALLY (305) 15
PRINT (306) 19
FUNC (307) 20
COMMA (308) 23 42


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
PROGRAM (56)
    on left: 1 2, on right: 0 1 12 13 15 25
STATEMENT (57)
    on left: 3 4 5 6 7 8 9 10 11, on right: 1 16 17
LOOP_STATEMENT (58)
    on left: 12 13, on right: 4
LOOP_CONDITION (59)
    on left: 14, on right: 12 13
FINALLY_STMT (60)
    on left: 15, on right: 13
IF_STATEMENT (61)
    on left: 16, on right: 18
ELSE_STATEMENT (62)
    on left: 17, on right: 18
CONDITIONAL_STATEMENT (63)
    on left: 18, on right: 5
PRINT_STATEMENT (64)
    on left: 19, on right: 6
FUNC_STATEMENT (65)
    on left: 20, on right: 3
FUNCTION_DEC_LIST (66)
    on left: 21, on right: 20
PARAMETER_LIST (67)
    on left: 22 23, on right: 21 23
PARAMETER (68)
    on left: 24, on right: 22 23
FUNCTION_BODY (69)
    on left: 25, on right: 20
RETURN_STATEMENT (70)
    on left: 26, on right: 25
SET_TYPE (71)
    on left: 27 28, on right: 29 30 32 34 37
VEC_TYPE (72)
    on left: 29, on right: 31 33
MIX_TYPE (73)
    on left: 30 31, on right: 34
TYPE (74)
    on left: 32 33 34, on right: 21 24 44
SET_SIZE (75)
    on left: 35 36, on right: 37
SET_STATEMENT (76)
    on left: 37, on right: 7
VAR_TYPE (77)
    on left: 38 39, on right: 40 71
DEC_CONDITION (78)
    on left: 40 41, on right: 42 43
VAR_LIST (79)
    on left: 42 43, on right: 42 44
DEC_STATEMENT (80)
    on left: 44, on right: 8 14
ASSIGN_STATEMENT (81)
    on left: 45, on right: 10 14
EXPRESSION_STMT (82)
    on left: 46, on right: 9
EXPRESSION (83)
    on left: 47, on right: 26 45 46 56
ARITHMETIC_EXP (84)
    on left: 48 49 50, on right: 48 49 61 62 63 64 65 66 67
MUL_EXP (85)
    on left: 51 52 53, on right: 48 49 50 51 52
POW_EXP (86)
    on left: 54 55, on right: 51 52 53 54
PRIMARY_EXP (87)
    on left: 56 57, on right: 54 55
BOOLEAN_EXP (88)
    on left: 58 59 60, on right: 14 16 47 58 59
RELATIONAL_EXP (89)
    on left: 61 62 63 64 65 66 67, on right: 58 59 60 61 62 63 64 65
    66
FACTOR (90)
    on left: 68 69 70, on right: 57
PRINTABLE (91)
    on left: 71 72, on right: 19


state 0

    0 $accept: . PROGRAM $end

    $default  reduce using rule 2 (PROGRAM)

    PROGRAM  go to state 1


state 1

    0 $accept: PROGRAM . $end
    1 PROGRAM: PROGRAM . STATEMENT

    $end              shift, and go to state 2
    INTEGER           shift, and go to state 3
    DOUBLE            shift, and go to state 4
    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    VAR               shift, and go to state 7
    SEMI              shift, and go to state 8
    LEFT_PAREN        shift, and go to state 9
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11
    RIGHT_ANGLE       shift, and go to state 12
    SET               shift, and go to state 13
    LOOP              shift, and go to state 14
    PRINT             shift, and go to state 15
    FUNC              shift, and go to state 16

    STATEMENT              go to state 17
    LOOP_STATEMENT         go to state 18
    CONDITIONAL_STATEMENT  go to state 19
    PRINT_STATEMENT        go to state 20
    FUNC_STATEMENT         go to state 21
    SET_TYPE               go to state 22
    VEC_TYPE               go to state 23
    TYPE                   go to state 24
    SET_STATEMENT          go to state 25
    DEC_STATEMENT          go to state 26
    ASSIGN_STATEMENT       go to state 27
    EXPRESSION_STMT        go to state 28
    EXPRESSION             go to state 29
    ARITHMETIC_EXP         go to state 30
    MUL_EXP                go to state 31
    POW_EXP                go to state 32
    PRIMARY_EXP            go to state 33
    BOOLEAN_EXP            go to state 34
    RELATIONAL_EXP         go to state 35
    FACTOR                 go to state 36


state 2

    0 $accept: PROGRAM $end .

    $default  accept


state 3

   69 FACTOR: INTEGER .

    $default  reduce using rule 69 (FACTOR)


state 4

   70 FACTOR: DOUBLE .

    $default  reduce using rule 70 (FACTOR)


state 5

   27 SET_TYPE: INT .

    $default  reduce using rule 27 (SET_TYPE)


state 6

   28 SET_TYPE: FLOAT .

    $default  reduce using rule 28 (SET_TYPE)


state 7

   45 ASSIGN_STATEMENT: VAR . ASSIGN EXPRESSION SEMI
   68 FACTOR: VAR .

    ASSIGN  shift, and go to state 37

    $default  reduce using rule 68 (FACTOR)


state 8

   11 STATEMENT: SEMI .

    $default  reduce using rule 11 (STATEMENT)


state 9

   56 PRIMARY_EXP: LEFT_PAREN . EXPRESSION RIGHT_PAREN

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    EXPRESSION      go to state 39
    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    BOOLEAN_EXP     go to state 34
    RELATIONAL_EXP  go to state 35
    FACTOR          go to state 36


state 10

   34 TYPE: LEFT_CURLY_BRACE . SET_TYPE ':' MIX_TYPE RIGHT_CURLY_BRACE

    INT    shift, and go to state 5
    FLOAT  shift, and go to state 6

    SET_TYPE  go to state 40


state 11

   29 VEC_TYPE: LEFT_BRACE . SET_TYPE RIGHT_BRACE

    INT    shift, and go to state 5
    FLOAT  shift, and go to state 6

    SET_TYPE  go to state 41


state 12

   18 CONDITIONAL_STATEMENT: RIGHT_ANGLE . IF_STATEMENT ELSE_STATEMENT LEFT_ANGLE

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    IF_STATEMENT    go to state 42
    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    BOOLEAN_EXP     go to state 43
    RELATIONAL_EXP  go to state 35
    FACTOR          go to state 36


state 13

   37 SET_STATEMENT: SET . SET_TYPE SET_SIZE SEMI

    INT    shift, and go to state 5
    FLOAT  shift, and go to state 6

    SET_TYPE  go to state 44


state 14

   12 LOOP_STATEMENT: LOOP . LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE
   13               | LOOP . LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON FINALLY_STMT

    LEFT_PAREN  shift, and go to state 45


state 15

   19 PRINT_STATEMENT: PRINT . LEFT_PAREN PRINTABLE RIGHT_PAREN SEMI

    LEFT_PAREN  shift, and go to state 46


state 16

   20 FUNC_STATEMENT: FUNC . VAR FUNCTION_DEC_LIST LEFT_ANGLE FUNCTION_BODY RIGHT_ANGLE

    VAR  shift, and go to state 47


state 17

    1 PROGRAM: PROGRAM STATEMENT .

    $default  reduce using rule 1 (PROGRAM)


state 18

    4 STATEMENT: LOOP_STATEMENT .

    $default  reduce using rule 4 (STATEMENT)


state 19

    5 STATEMENT: CONDITIONAL_STATEMENT .

    $default  reduce using rule 5 (STATEMENT)


state 20

    6 STATEMENT: PRINT_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


state 21

    3 STATEMENT: FUNC_STATEMENT .

    $default  reduce using rule 3 (STATEMENT)


state 22

   32 TYPE: SET_TYPE .

    $default  reduce using rule 32 (TYPE)


state 23

   33 TYPE: VEC_TYPE .

    $default  reduce using rule 33 (TYPE)


state 24

   44 DEC_STATEMENT: TYPE . VAR_LIST SEMI

    VAR  shift, and go to state 48

    VAR_LIST  go to state 49


state 25

    7 STATEMENT: SET_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


state 26

    8 STATEMENT: DEC_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


state 27

   10 STATEMENT: ASSIGN_STATEMENT .

    $default  reduce using rule 10 (STATEMENT)


state 28

    9 STATEMENT: EXPRESSION_STMT .

    $default  reduce using rule 9 (STATEMENT)


state 29

   46 EXPRESSION_STMT: EXPRESSION . SEMI

    SEMI  shift, and go to state 50


state 30

   48 ARITHMETIC_EXP: ARITHMETIC_EXP . ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP . SUB_OP MUL_EXP
   67 RELATIONAL_EXP: ARITHMETIC_EXP .

    ADD_OP  shift, and go to state 51
    SUB_OP  shift, and go to state 52

    $default  reduce using rule 67 (RELATIONAL_EXP)


state 31

   50 ARITHMETIC_EXP: MUL_EXP .
   51 MUL_EXP: MUL_EXP . MULT_OP POW_EXP
   52        | MUL_EXP . DIV_OP POW_EXP

    DIV_OP   shift, and go to state 53
    MULT_OP  shift, and go to state 54

    $default  reduce using rule 50 (ARITHMETIC_EXP)


state 32

   53 MUL_EXP: POW_EXP .
   54 POW_EXP: POW_EXP . POW_OP PRIMARY_EXP

    POW_OP  shift, and go to state 55

    $default  reduce using rule 53 (MUL_EXP)


state 33

   55 POW_EXP: PRIMARY_EXP .

    $default  reduce using rule 55 (POW_EXP)


state 34

   47 EXPRESSION: BOOLEAN_EXP .
   58 BOOLEAN_EXP: BOOLEAN_EXP . AND RELATIONAL_EXP
   59            | BOOLEAN_EXP . OR RELATIONAL_EXP

    OR   shift, and go to state 56
    AND  shift, and go to state 57

    $default  reduce using rule 47 (EXPRESSION)


state 35

   60 BOOLEAN_EXP: RELATIONAL_EXP .
   61 RELATIONAL_EXP: RELATIONAL_EXP . LEFT_ANGLE ARITHMETIC_EXP
   62               | RELATIONAL_EXP . RIGHT_ANGLE ARITHMETIC_EXP
   63               | RELATIONAL_EXP . GREAT_THAN_EQ ARITHMETIC_EXP
   64               | RELATIONAL_EXP . LESS_THAN_EQ ARITHMETIC_EXP
   65               | RELATIONAL_EXP . EQUAL_TO ARITHMETIC_EXP
   66               | RELATIONAL_EXP . NOT_EQ ARITHMETIC_EXP

    LESS_THAN_EQ   shift, and go to state 58
    GREAT_THAN_EQ  shift, and go to state 59
    NOT_EQ         shift, and go to state 60
    EQUAL_TO       shift, and go to state 61
    RIGHT_ANGLE    shift, and go to state 62
    LEFT_ANGLE     shift, and go to state 63

    $default  reduce using rule 60 (BOOLEAN_EXP)


state 36

   57 PRIMARY_EXP: FACTOR .

    $default  reduce using rule 57 (PRIMARY_EXP)


state 37

   45 ASSIGN_STATEMENT: VAR ASSIGN . EXPRESSION SEMI

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    EXPRESSION      go to state 64
    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    BOOLEAN_EXP     go to state 34
    RELATIONAL_EXP  go to state 35
    FACTOR          go to state 36


state 38

   68 FACTOR: VAR .

    $default  reduce using rule 68 (FACTOR)


state 39

   56 PRIMARY_EXP: LEFT_PAREN EXPRESSION . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 65


state 40

   34 TYPE: LEFT_CURLY_BRACE SET_TYPE . ':' MIX_TYPE RIGHT_CURLY_BRACE

    ':'  shift, and go to state 66


state 41

   29 VEC_TYPE: LEFT_BRACE SET_TYPE . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 67


state 42

   18 CONDITIONAL_STATEMENT: RIGHT_ANGLE IF_STATEMENT . ELSE_STATEMENT LEFT_ANGLE

    ELSE  shift, and go to state 68

    ELSE_STATEMENT  go to state 69


state 43

   16 IF_STATEMENT: BOOLEAN_EXP . TERNARY STATEMENT
   58 BOOLEAN_EXP: BOOLEAN_EXP . AND RELATIONAL_EXP
   59            | BOOLEAN_EXP . OR RELATIONAL_EXP

    OR       shift, and go to state 56
    AND      shift, and go to state 57
    TERNARY  shift, and go to state 70


state 44

   37 SET_STATEMENT: SET SET_TYPE . SET_SIZE SEMI

    BIG    shift, and go to state 71
    SMALL  shift, and go to state 72

    SET_SIZE  go to state 73


state 45

   12 LOOP_STATEMENT: LOOP LEFT_PAREN . LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE
   13               | LOOP LEFT_PAREN . LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON FINALLY_STMT

    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11

    LOOP_CONDITION  go to state 74
    SET_TYPE        go to state 22
    VEC_TYPE        go to state 23
    TYPE            go to state 24
    DEC_STATEMENT   go to state 75


state 46

   19 PRINT_STATEMENT: PRINT LEFT_PAREN . PRINTABLE RIGHT_PAREN SEMI

    INTEGER  shift, and go to state 76
    DOUBLE   shift, and go to state 77
    VAR      shift, and go to state 78

    VAR_TYPE   go to state 79
    PRINTABLE  go to state 80


state 47

   20 FUNC_STATEMENT: FUNC VAR . FUNCTION_DEC_LIST LEFT_ANGLE FUNCTION_BODY RIGHT_ANGLE

    LEFT_PAREN  shift, and go to state 81

    FUNCTION_DEC_LIST  go to state 82


state 48

   43 VAR_LIST: VAR . DEC_CONDITION

    ASSIGN  shift, and go to state 83

    $default  reduce using rule 41 (DEC_CONDITION)

    DEC_CONDITION  go to state 84


state 49

   42 VAR_LIST: VAR_LIST . COMMA VAR DEC_CONDITION
   44 DEC_STATEMENT: TYPE VAR_LIST . SEMI

    SEMI   shift, and go to state 85
    COMMA  shift, and go to state 86


state 50

   46 EXPRESSION_STMT: EXPRESSION SEMI .

    $default  reduce using rule 46 (EXPRESSION_STMT)


state 51

   48 ARITHMETIC_EXP: ARITHMETIC_EXP ADD_OP . MUL_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    MUL_EXP      go to state 87
    POW_EXP      go to state 32
    PRIMARY_EXP  go to state 33
    FACTOR       go to state 36


state 52

   49 ARITHMETIC_EXP: ARITHMETIC_EXP SUB_OP . MUL_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    MUL_EXP      go to state 88
    POW_EXP      go to state 32
    PRIMARY_EXP  go to state 33
    FACTOR       go to state 36


state 53

   52 MUL_EXP: MUL_EXP DIV_OP . POW_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    POW_EXP      go to state 89
    PRIMARY_EXP  go to state 33
    FACTOR       go to state 36


state 54

   51 MUL_EXP: MUL_EXP MULT_OP . POW_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    POW_EXP      go to state 90
    PRIMARY_EXP  go to state 33
    FACTOR       go to state 36


state 55

   54 POW_EXP: POW_EXP POW_OP . PRIMARY_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    PRIMARY_EXP  go to state 91
    FACTOR       go to state 36


state 56

   59 BOOLEAN_EXP: BOOLEAN_EXP OR . RELATIONAL_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    RELATIONAL_EXP  go to state 92
    FACTOR          go to state 36


state 57

   58 BOOLEAN_EXP: BOOLEAN_EXP AND . RELATIONAL_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    RELATIONAL_EXP  go to state 93
    FACTOR          go to state 36


state 58

   64 RELATIONAL_EXP: RELATIONAL_EXP LESS_THAN_EQ . ARITHMETIC_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 94
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    FACTOR          go to state 36


state 59

   63 RELATIONAL_EXP: RELATIONAL_EXP GREAT_THAN_EQ . ARITHMETIC_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 95
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    FACTOR          go to state 36


state 60

   66 RELATIONAL_EXP: RELATIONAL_EXP NOT_EQ . ARITHMETIC_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 96
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    FACTOR          go to state 36


state 61

   65 RELATIONAL_EXP: RELATIONAL_EXP EQUAL_TO . ARITHMETIC_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 97
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    FACTOR          go to state 36


state 62

   62 RELATIONAL_EXP: RELATIONAL_EXP RIGHT_ANGLE . ARITHMETIC_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 98
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    FACTOR          go to state 36


state 63

   61 RELATIONAL_EXP: RELATIONAL_EXP LEFT_ANGLE . ARITHMETIC_EXP

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 99
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    FACTOR          go to state 36


state 64

   45 ASSIGN_STATEMENT: VAR ASSIGN EXPRESSION . SEMI

    SEMI  shift, and go to state 100


state 65

   56 PRIMARY_EXP: LEFT_PAREN EXPRESSION RIGHT_PAREN .

    $default  reduce using rule 56 (PRIMARY_EXP)


state 66

   34 TYPE: LEFT_CURLY_BRACE SET_TYPE ':' . MIX_TYPE RIGHT_CURLY_BRACE

    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    LEFT_BRACE  shift, and go to state 11

    SET_TYPE  go to state 101
    VEC_TYPE  go to state 102
    MIX_TYPE  go to state 103


state 67

   29 VEC_TYPE: LEFT_BRACE SET_TYPE RIGHT_BRACE .

    $default  reduce using rule 29 (VEC_TYPE)


state 68

   17 ELSE_STATEMENT: ELSE . COLON STATEMENT

    COLON  shift, and go to state 104


state 69

   18 CONDITIONAL_STATEMENT: RIGHT_ANGLE IF_STATEMENT ELSE_STATEMENT . LEFT_ANGLE

    LEFT_ANGLE  shift, and go to state 105


state 70

   16 IF_STATEMENT: BOOLEAN_EXP TERNARY . STATEMENT

    INTEGER           shift, and go to state 3
    DOUBLE            shift, and go to state 4
    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    VAR               shift, and go to state 7
    SEMI              shift, and go to state 8
    LEFT_PAREN        shift, and go to state 9
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11
    RIGHT_ANGLE       shift, and go to state 12
    SET               shift, and go to state 13
    LOOP              shift, and go to state 14
    PRINT             shift, and go to state 15
    FUNC              shift, and go to state 16

    STATEMENT              go to state 106
    LOOP_STATEMENT         go to state 18
    CONDITIONAL_STATEMENT  go to state 19
    PRINT_STATEMENT        go to state 20
    FUNC_STATEMENT         go to state 21
    SET_TYPE               go to state 22
    VEC_TYPE               go to state 23
    TYPE                   go to state 24
    SET_STATEMENT          go to state 25
    DEC_STATEMENT          go to state 26
    ASSIGN_STATEMENT       go to state 27
    EXPRESSION_STMT        go to state 28
    EXPRESSION             go to state 29
    ARITHMETIC_EXP         go to state 30
    MUL_EXP                go to state 31
    POW_EXP                go to state 32
    PRIMARY_EXP            go to state 33
    BOOLEAN_EXP            go to state 34
    RELATIONAL_EXP         go to state 35
    FACTOR                 go to state 36


state 71

   35 SET_SIZE: BIG .

    $default  reduce using rule 35 (SET_SIZE)


state 72

   36 SET_SIZE: SMALL .

    $default  reduce using rule 36 (SET_SIZE)


state 73

   37 SET_STATEMENT: SET SET_TYPE SET_SIZE . SEMI

    SEMI  shift, and go to state 107


state 74

   12 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION . RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE
   13               | LOOP LEFT_PAREN LOOP_CONDITION . RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON FINALLY_STMT

    RIGHT_PAREN  shift, and go to state 108


state 75

   14 LOOP_CONDITION: DEC_STATEMENT . BOOLEAN_EXP SEMI ASSIGN_STATEMENT

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    BOOLEAN_EXP     go to state 109
    RELATIONAL_EXP  go to state 35
    FACTOR          go to state 36


state 76

   38 VAR_TYPE: INTEGER .

    $default  reduce using rule 38 (VAR_TYPE)


state 77

   39 VAR_TYPE: DOUBLE .

    $default  reduce using rule 39 (VAR_TYPE)


state 78

   72 PRINTABLE: VAR .

    $default  reduce using rule 72 (PRINTABLE)


state 79

   71 PRINTABLE: VAR_TYPE .

    $default  reduce using rule 71 (PRINTABLE)


state 80

   19 PRINT_STATEMENT: PRINT LEFT_PAREN PRINTABLE . RIGHT_PAREN SEMI

    RIGHT_PAREN  shift, and go to state 110


state 81

   21 FUNCTION_DEC_LIST: LEFT_PAREN . PARAMETER_LIST SEMI TYPE RIGHT_PAREN

    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11

    PARAMETER_LIST  go to state 111
    PARAMETER       go to state 112
    SET_TYPE        go to state 22
    VEC_TYPE        go to state 23
    TYPE            go to state 113


state 82

   20 FUNC_STATEMENT: FUNC VAR FUNCTION_DEC_LIST . LEFT_ANGLE FUNCTION_BODY RIGHT_ANGLE

    LEFT_ANGLE  shift, and go to state 114


state 83

   40 DEC_CONDITION: ASSIGN . VAR_TYPE

    INTEGER  shift, and go to state 76
    DOUBLE   shift, and go to state 77

    VAR_TYPE  go to state 115


state 84

   43 VAR_LIST: VAR DEC_CONDITION .

    $default  reduce using rule 43 (VAR_LIST)


state 85

   44 DEC_STATEMENT: TYPE VAR_LIST SEMI .

    $default  reduce using rule 44 (DEC_STATEMENT)


state 86

   42 VAR_LIST: VAR_LIST COMMA . VAR DEC_CONDITION

    VAR  shift, and go to state 116


state 87

   48 ARITHMETIC_EXP: ARITHMETIC_EXP ADD_OP MUL_EXP .
   51 MUL_EXP: MUL_EXP . MULT_OP POW_EXP
   52        | MUL_EXP . DIV_OP POW_EXP

    DIV_OP   shift, and go to state 53
    MULT_OP  shift, and go to state 54

    $default  reduce using rule 48 (ARITHMETIC_EXP)


state 88

   49 ARITHMETIC_EXP: ARITHMETIC_EXP SUB_OP MUL_EXP .
   51 MUL_EXP: MUL_EXP . MULT_OP POW_EXP
   52        | MUL_EXP . DIV_OP POW_EXP

    DIV_OP   shift, and go to state 53
    MULT_OP  shift, and go to state 54

    $default  reduce using rule 49 (ARITHMETIC_EXP)


state 89

   52 MUL_EXP: MUL_EXP DIV_OP POW_EXP .
   54 POW_EXP: POW_EXP . POW_OP PRIMARY_EXP

    POW_OP  shift, and go to state 55

    $default  reduce using rule 52 (MUL_EXP)


state 90

   51 MUL_EXP: MUL_EXP MULT_OP POW_EXP .
   54 POW_EXP: POW_EXP . POW_OP PRIMARY_EXP

    POW_OP  shift, and go to state 55

    $default  reduce using rule 51 (MUL_EXP)


state 91

   54 POW_EXP: POW_EXP POW_OP PRIMARY_EXP .

    $default  reduce using rule 54 (POW_EXP)


state 92

   59 BOOLEAN_EXP: BOOLEAN_EXP OR RELATIONAL_EXP .
   61 RELATIONAL_EXP: RELATIONAL_EXP . LEFT_ANGLE ARITHMETIC_EXP
   62               | RELATIONAL_EXP . RIGHT_ANGLE ARITHMETIC_EXP
   63               | RELATIONAL_EXP . GREAT_THAN_EQ ARITHMETIC_EXP
   64               | RELATIONAL_EXP . LESS_THAN_EQ ARITHMETIC_EXP
   65               | RELATIONAL_EXP . EQUAL_TO ARITHMETIC_EXP
   66               | RELATIONAL_EXP . NOT_EQ ARITHMETIC_EXP

    LESS_THAN_EQ   shift, and go to state 58
    GREAT_THAN_EQ  shift, and go to state 59
    NOT_EQ         shift, and go to state 60
    EQUAL_TO       shift, and go to state 61
    RIGHT_ANGLE    shift, and go to state 62
    LEFT_ANGLE     shift, and go to state 63

    $default  reduce using rule 59 (BOOLEAN_EXP)


state 93

   58 BOOLEAN_EXP: BOOLEAN_EXP AND RELATIONAL_EXP .
   61 RELATIONAL_EXP: RELATIONAL_EXP . LEFT_ANGLE ARITHMETIC_EXP
   62               | RELATIONAL_EXP . RIGHT_ANGLE ARITHMETIC_EXP
   63               | RELATIONAL_EXP . GREAT_THAN_EQ ARITHMETIC_EXP
   64               | RELATIONAL_EXP . LESS_THAN_EQ ARITHMETIC_EXP
   65               | RELATIONAL_EXP . EQUAL_TO ARITHMETIC_EXP
   66               | RELATIONAL_EXP . NOT_EQ ARITHMETIC_EXP

    LESS_THAN_EQ   shift, and go to state 58
    GREAT_THAN_EQ  shift, and go to state 59
    NOT_EQ         shift, and go to state 60
    EQUAL_TO       shift, and go to state 61
    RIGHT_ANGLE    shift, and go to state 62
    LEFT_ANGLE     shift, and go to state 63

    $default  reduce using rule 58 (BOOLEAN_EXP)


state 94

   48 ARITHMETIC_EXP: ARITHMETIC_EXP . ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP . SUB_OP MUL_EXP
   64 RELATIONAL_EXP: RELATIONAL_EXP LESS_THAN_EQ ARITHMETIC_EXP .

    ADD_OP  shift, and go to state 51
    SUB_OP  shift, and go to state 52

    $default  reduce using rule 64 (RELATIONAL_EXP)


state 95

   48 ARITHMETIC_EXP: ARITHMETIC_EXP . ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP . SUB_OP MUL_EXP
   63 RELATIONAL_EXP: RELATIONAL_EXP GREAT_THAN_EQ ARITHMETIC_EXP .

    ADD_OP  shift, and go to state 51
    SUB_OP  shift, and go to state 52

    $default  reduce using rule 63 (RELATIONAL_EXP)


state 96

   48 ARITHMETIC_EXP: ARITHMETIC_EXP . ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP . SUB_OP MUL_EXP
   66 RELATIONAL_EXP: RELATIONAL_EXP NOT_EQ ARITHMETIC_EXP .

    ADD_OP  shift, and go to state 51
    SUB_OP  shift, and go to state 52

    $default  reduce using rule 66 (RELATIONAL_EXP)


state 97

   48 ARITHMETIC_EXP: ARITHMETIC_EXP . ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP . SUB_OP MUL_EXP
   65 RELATIONAL_EXP: RELATIONAL_EXP EQUAL_TO ARITHMETIC_EXP .

    ADD_OP  shift, and go to state 51
    SUB_OP  shift, and go to state 52

    $default  reduce using rule 65 (RELATIONAL_EXP)


state 98

   48 ARITHMETIC_EXP: ARITHMETIC_EXP . ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP . SUB_OP MUL_EXP
   62 RELATIONAL_EXP: RELATIONAL_EXP RIGHT_ANGLE ARITHMETIC_EXP .

    ADD_OP  shift, and go to state 51
    SUB_OP  shift, and go to state 52

    $default  reduce using rule 62 (RELATIONAL_EXP)


state 99

   48 ARITHMETIC_EXP: ARITHMETIC_EXP . ADD_OP MUL_EXP
   49               | ARITHMETIC_EXP . SUB_OP MUL_EXP
   61 RELATIONAL_EXP: RELATIONAL_EXP LEFT_ANGLE ARITHMETIC_EXP .

    ADD_OP  shift, and go to state 51
    SUB_OP  shift, and go to state 52

    $default  reduce using rule 61 (RELATIONAL_EXP)


state 100

   45 ASSIGN_STATEMENT: VAR ASSIGN EXPRESSION SEMI .

    $default  reduce using rule 45 (ASSIGN_STATEMENT)


state 101

   30 MIX_TYPE: SET_TYPE .

    $default  reduce using rule 30 (MIX_TYPE)


state 102

   31 MIX_TYPE: VEC_TYPE .

    $default  reduce using rule 31 (MIX_TYPE)


state 103

   34 TYPE: LEFT_CURLY_BRACE SET_TYPE ':' MIX_TYPE . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 117


state 104

   17 ELSE_STATEMENT: ELSE COLON . STATEMENT

    INTEGER           shift, and go to state 3
    DOUBLE            shift, and go to state 4
    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    VAR               shift, and go to state 7
    SEMI              shift, and go to state 8
    LEFT_PAREN        shift, and go to state 9
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11
    RIGHT_ANGLE       shift, and go to state 12
    SET               shift, and go to state 13
    LOOP              shift, and go to state 14
    PRINT             shift, and go to state 15
    FUNC              shift, and go to state 16

    STATEMENT              go to state 118
    LOOP_STATEMENT         go to state 18
    CONDITIONAL_STATEMENT  go to state 19
    PRINT_STATEMENT        go to state 20
    FUNC_STATEMENT         go to state 21
    SET_TYPE               go to state 22
    VEC_TYPE               go to state 23
    TYPE                   go to state 24
    SET_STATEMENT          go to state 25
    DEC_STATEMENT          go to state 26
    ASSIGN_STATEMENT       go to state 27
    EXPRESSION_STMT        go to state 28
    EXPRESSION             go to state 29
    ARITHMETIC_EXP         go to state 30
    MUL_EXP                go to state 31
    POW_EXP                go to state 32
    PRIMARY_EXP            go to state 33
    BOOLEAN_EXP            go to state 34
    RELATIONAL_EXP         go to state 35
    FACTOR                 go to state 36


state 105

   18 CONDITIONAL_STATEMENT: RIGHT_ANGLE IF_STATEMENT ELSE_STATEMENT LEFT_ANGLE .

    $default  reduce using rule 18 (CONDITIONAL_STATEMENT)


state 106

   16 IF_STATEMENT: BOOLEAN_EXP TERNARY STATEMENT .

    $default  reduce using rule 16 (IF_STATEMENT)


state 107

   37 SET_STATEMENT: SET SET_TYPE SET_SIZE SEMI .

    $default  reduce using rule 37 (SET_STATEMENT)


state 108

   12 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN . COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE
   13               | LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN . COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON FINALLY_STMT

    COLON  shift, and go to state 119


state 109

   14 LOOP_CONDITION: DEC_STATEMENT BOOLEAN_EXP . SEMI ASSIGN_STATEMENT
   58 BOOLEAN_EXP: BOOLEAN_EXP . AND RELATIONAL_EXP
   59            | BOOLEAN_EXP . OR RELATIONAL_EXP

    OR    shift, and go to state 56
    AND   shift, and go to state 57
    SEMI  shift, and go to state 120


state 110

   19 PRINT_STATEMENT: PRINT LEFT_PAREN PRINTABLE RIGHT_PAREN . SEMI

    SEMI  shift, and go to state 121


state 111

   21 FUNCTION_DEC_LIST: LEFT_PAREN PARAMETER_LIST . SEMI TYPE RIGHT_PAREN
   23 PARAMETER_LIST: PARAMETER_LIST . COMMA PARAMETER

    SEMI   shift, and go to state 122
    COMMA  shift, and go to state 123


state 112

   22 PARAMETER_LIST: PARAMETER .

    $default  reduce using rule 22 (PARAMETER_LIST)


state 113

   24 PARAMETER: TYPE . VAR

    VAR  shift, and go to state 124


state 114

   20 FUNC_STATEMENT: FUNC VAR FUNCTION_DEC_LIST LEFT_ANGLE . FUNCTION_BODY RIGHT_ANGLE

    $default  reduce using rule 2 (PROGRAM)

    PROGRAM        go to state 125
    FUNCTION_BODY  go to state 126


state 115

   40 DEC_CONDITION: ASSIGN VAR_TYPE .

    $default  reduce using rule 40 (DEC_CONDITION)


state 116

   42 VAR_LIST: VAR_LIST COMMA VAR . DEC_CONDITION

    ASSIGN  shift, and go to state 83

    $default  reduce using rule 41 (DEC_CONDITION)

    DEC_CONDITION  go to state 127


state 117

   34 TYPE: LEFT_CURLY_BRACE SET_TYPE ':' MIX_TYPE RIGHT_CURLY_BRACE .

    $default  reduce using rule 34 (TYPE)


state 118

   17 ELSE_STATEMENT: ELSE COLON STATEMENT .

    $default  reduce using rule 17 (ELSE_STATEMENT)


state 119

   12 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON . LEFT_ANGLE PROGRAM RIGHT_ANGLE
   13               | LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON . LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON FINALLY_STMT

    LEFT_ANGLE  shift, and go to state 128


state 120

   14 LOOP_CONDITION: DEC_STATEMENT BOOLEAN_EXP SEMI . ASSIGN_STATEMENT

    VAR  shift, and go to state 129

    ASSIGN_STATEMENT  go to state 130


state 121

   19 PRINT_STATEMENT: PRINT LEFT_PAREN PRINTABLE RIGHT_PAREN SEMI .

    $default  reduce using rule 19 (PRINT_STATEMENT)


state 122

   21 FUNCTION_DEC_LIST: LEFT_PAREN PARAMETER_LIST SEMI . TYPE RIGHT_PAREN

    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11

    SET_TYPE  go to state 22
    VEC_TYPE  go to state 23
    TYPE      go to state 131


state 123

   23 PARAMETER_LIST: PARAMETER_LIST COMMA . PARAMETER

    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11

    PARAMETER  go to state 132
    SET_TYPE   go to state 22
    VEC_TYPE   go to state 23
    TYPE       go to state 113


state 124

   24 PARAMETER: TYPE VAR .

    $default  reduce using rule 24 (PARAMETER)


state 125

    1 PROGRAM: PROGRAM . STATEMENT
   25 FUNCTION_BODY: PROGRAM . RETURN_STATEMENT

    INTEGER           shift, and go to state 3
    DOUBLE            shift, and go to state 4
    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    RETURN            shift, and go to state 133
    VAR               shift, and go to state 7
    SEMI              shift, and go to state 8
    LEFT_PAREN        shift, and go to state 9
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11
    RIGHT_ANGLE       shift, and go to state 12
    SET               shift, and go to state 13
    LOOP              shift, and go to state 14
    PRINT             shift, and go to state 15
    FUNC              shift, and go to state 16

    STATEMENT              go to state 17
    LOOP_STATEMENT         go to state 18
    CONDITIONAL_STATEMENT  go to state 19
    PRINT_STATEMENT        go to state 20
    FUNC_STATEMENT         go to state 21
    RETURN_STATEMENT       go to state 134
    SET_TYPE               go to state 22
    VEC_TYPE               go to state 23
    TYPE                   go to state 24
    SET_STATEMENT          go to state 25
    DEC_STATEMENT          go to state 26
    ASSIGN_STATEMENT       go to state 27
    EXPRESSION_STMT        go to state 28
    EXPRESSION             go to state 29
    ARITHMETIC_EXP         go to state 30
    MUL_EXP                go to state 31
    POW_EXP                go to state 32
    PRIMARY_EXP            go to state 33
    BOOLEAN_EXP            go to state 34
    RELATIONAL_EXP         go to state 35
    FACTOR                 go to state 36


state 126

   20 FUNC_STATEMENT: FUNC VAR FUNCTION_DEC_LIST LEFT_ANGLE FUNCTION_BODY . RIGHT_ANGLE

    RIGHT_ANGLE  shift, and go to state 135


state 127

   42 VAR_LIST: VAR_LIST COMMA VAR DEC_CONDITION .

    $default  reduce using rule 42 (VAR_LIST)


state 128

   12 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE . PROGRAM RIGHT_ANGLE
   13               | LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE . PROGRAM RIGHT_ANGLE COLON FINALLY_STMT

    $default  reduce using rule 2 (PROGRAM)

    PROGRAM  go to state 136


state 129

   45 ASSIGN_STATEMENT: VAR . ASSIGN EXPRESSION SEMI

    ASSIGN  shift, and go to state 37


state 130

   14 LOOP_CONDITION: DEC_STATEMENT BOOLEAN_EXP SEMI ASSIGN_STATEMENT .

    $default  reduce using rule 14 (LOOP_CONDITION)


state 131

   21 FUNCTION_DEC_LIST: LEFT_PAREN PARAMETER_LIST SEMI TYPE . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 137


state 132

   23 PARAMETER_LIST: PARAMETER_LIST COMMA PARAMETER .

    $default  reduce using rule 23 (PARAMETER_LIST)


state 133

   26 RETURN_STATEMENT: RETURN . EXPRESSION SEMI

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    EXPRESSION      go to state 138
    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    BOOLEAN_EXP     go to state 34
    RELATIONAL_EXP  go to state 35
    FACTOR          go to state 36


state 134

   25 FUNCTION_BODY: PROGRAM RETURN_STATEMENT .

    $default  reduce using rule 25 (FUNCTION_BODY)


state 135

   20 FUNC_STATEMENT: FUNC VAR FUNCTION_DEC_LIST LEFT_ANGLE FUNCTION_BODY RIGHT_ANGLE .

    $default  reduce using rule 20 (FUNC_STATEMENT)


state 136

    1 PROGRAM: PROGRAM . STATEMENT
   12 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM . RIGHT_ANGLE
   13               | LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM . RIGHT_ANGLE COLON FINALLY_STMT

    INTEGER           shift, and go to state 3
    DOUBLE            shift, and go to state 4
    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    VAR               shift, and go to state 7
    SEMI              shift, and go to state 8
    LEFT_PAREN        shift, and go to state 9
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11
    RIGHT_ANGLE       shift, and go to state 139
    SET               shift, and go to state 13
    LOOP              shift, and go to state 14
    PRINT             shift, and go to state 15
    FUNC              shift, and go to state 16

    STATEMENT              go to state 17
    LOOP_STATEMENT         go to state 18
    CONDITIONAL_STATEMENT  go to state 19
    PRINT_STATEMENT        go to state 20
    FUNC_STATEMENT         go to state 21
    SET_TYPE               go to state 22
    VEC_TYPE               go to state 23
    TYPE                   go to state 24
    SET_STATEMENT          go to state 25
    DEC_STATEMENT          go to state 26
    ASSIGN_STATEMENT       go to state 27
    EXPRESSION_STMT        go to state 28
    EXPRESSION             go to state 29
    ARITHMETIC_EXP         go to state 30
    MUL_EXP                go to state 31
    POW_EXP                go to state 32
    PRIMARY_EXP            go to state 33
    BOOLEAN_EXP            go to state 34
    RELATIONAL_EXP         go to state 35
    FACTOR                 go to state 36


state 137

   21 FUNCTION_DEC_LIST: LEFT_PAREN PARAMETER_LIST SEMI TYPE RIGHT_PAREN .

    $default  reduce using rule 21 (FUNCTION_DEC_LIST)


state 138

   26 RETURN_STATEMENT: RETURN EXPRESSION . SEMI

    SEMI  shift, and go to state 140


state 139

   12 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE .
   13               | LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE . COLON FINALLY_STMT
   18 CONDITIONAL_STATEMENT: RIGHT_ANGLE . IF_STATEMENT ELSE_STATEMENT LEFT_ANGLE

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    COLON       shift, and go to state 141
    LEFT_PAREN  shift, and go to state 9

    INTEGER     [reduce using rule 12 (LOOP_STATEMENT)]
    DOUBLE      [reduce using rule 12 (LOOP_STATEMENT)]
    VAR         [reduce using rule 12 (LOOP_STATEMENT)]
    LEFT_PAREN  [reduce using rule 12 (LOOP_STATEMENT)]
    $default    reduce using rule 12 (LOOP_STATEMENT)

    IF_STATEMENT    go to state 42
    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    BOOLEAN_EXP     go to state 43
    RELATIONAL_EXP  go to state 35
    FACTOR          go to state 36


state 140

   26 RETURN_STATEMENT: RETURN EXPRESSION SEMI .

    $default  reduce using rule 26 (RETURN_STATEMENT)


state 141

   13 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON . FINALLY_STMT

    FINALLY  shift, and go to state 142

    FINALLY_STMT  go to state 143


state 142

   15 FINALLY_STMT: FINALLY . COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE

    COLON  shift, and go to state 144


state 143

   13 LOOP_STATEMENT: LOOP LEFT_PAREN LOOP_CONDITION RIGHT_PAREN COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE COLON FINALLY_STMT .

    $default  reduce using rule 13 (LOOP_STATEMENT)


state 144

   15 FINALLY_STMT: FINALLY COLON . LEFT_ANGLE PROGRAM RIGHT_ANGLE

    LEFT_ANGLE  shift, and go to state 145


state 145

   15 FINALLY_STMT: FINALLY COLON LEFT_ANGLE . PROGRAM RIGHT_ANGLE

    $default  reduce using rule 2 (PROGRAM)

    PROGRAM  go to state 146


state 146

    1 PROGRAM: PROGRAM . STATEMENT
   15 FINALLY_STMT: FINALLY COLON LEFT_ANGLE PROGRAM . RIGHT_ANGLE

    INTEGER           shift, and go to state 3
    DOUBLE            shift, and go to state 4
    INT               shift, and go to state 5
    FLOAT             shift, and go to state 6
    VAR               shift, and go to state 7
    SEMI              shift, and go to state 8
    LEFT_PAREN        shift, and go to state 9
    LEFT_CURLY_BRACE  shift, and go to state 10
    LEFT_BRACE        shift, and go to state 11
    RIGHT_ANGLE       shift, and go to state 147
    SET               shift, and go to state 13
    LOOP              shift, and go to state 14
    PRINT             shift, and go to state 15
    FUNC              shift, and go to state 16

    STATEMENT              go to state 17
    LOOP_STATEMENT         go to state 18
    CONDITIONAL_STATEMENT  go to state 19
    PRINT_STATEMENT        go to state 20
    FUNC_STATEMENT         go to state 21
    SET_TYPE               go to state 22
    VEC_TYPE               go to state 23
    TYPE                   go to state 24
    SET_STATEMENT          go to state 25
    DEC_STATEMENT          go to state 26
    ASSIGN_STATEMENT       go to state 27
    EXPRESSION_STMT        go to state 28
    EXPRESSION             go to state 29
    ARITHMETIC_EXP         go to state 30
    MUL_EXP                go to state 31
    POW_EXP                go to state 32
    PRIMARY_EXP            go to state 33
    BOOLEAN_EXP            go to state 34
    RELATIONAL_EXP         go to state 35
    FACTOR                 go to state 36


state 147

   15 FINALLY_STMT: FINALLY COLON LEFT_ANGLE PROGRAM RIGHT_ANGLE .
   18 CONDITIONAL_STATEMENT: RIGHT_ANGLE . IF_STATEMENT ELSE_STATEMENT LEFT_ANGLE

    INTEGER     shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VAR         shift, and go to state 38
    LEFT_PAREN  shift, and go to state 9

    INTEGER     [reduce using rule 15 (FINALLY_STMT)]
    DOUBLE      [reduce using rule 15 (FINALLY_STMT)]
    VAR         [reduce using rule 15 (FINALLY_STMT)]
    LEFT_PAREN  [reduce using rule 15 (FINALLY_STMT)]
    $default    reduce using rule 15 (FINALLY_STMT)

    IF_STATEMENT    go to state 42
    ARITHMETIC_EXP  go to state 30
    MUL_EXP         go to state 31
    POW_EXP         go to state 32
    PRIMARY_EXP     go to state 33
    BOOLEAN_EXP     go to state 43
    RELATIONAL_EXP  go to state 35
    FACTOR          go to state 36
